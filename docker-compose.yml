#docker-compose.yml
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch 
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.audit.enabled=true
      - ELASTIC_PASSWORD=somethingsecret
      - KIBANA_SYSTEM_PASSWORD=kibana_password_123
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - otel-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f -u elastic:somethingsecret http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_SERVICEACCOUNTTOKEN=AAEAAWVsYXN0aWMva2liYW5hL2tpYmFuYS10b2tlbjphdktrb0NGMVMtaTVwVHpiNHlDRm5B
      - xpack.security.enabled=true
      - xpack.fleet.enabled=true
      - xpack.encryptedSavedObjects.encryptionKey=fhjskloppd678ehkdfdlliverpoolfcr
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - otel-network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otelcol-contrib/config.yaml"]
    volumes:
      - ./config.yaml:/etc/otelcol-contrib/config.yaml
      - jenkins_data:/var/jenkins_home:ro

    ports: 
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
    depends_on:
      - elasticsearch
    networks:
      - otel-network

# APM-Server
  apm-server:
    image: docker.elastic.co/apm/apm-server:8.11.0
    container_name: apm-server
    ports:
      - "8200:8200"
    environment:
      - LOGGING_TO_FILES=false
      - LOGGING_TO_STDERR=true
      - LOGGING_LEVEL=info
    volumes:
      - ./apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
    networks:
      - otel-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8200/intake/v2/events || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s


#Express API
  express-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: express-metrics-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - OTEL_SERVICE_NAME=express-metrics-api
      - OTEL_SERVICE_VERSION=1.0.0
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4318/v1/traces
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://otel-collector:4318/v1/metrics
      - OTEL_RESOURCE_ATTRIBUTES=service.name=express-metrics-api,service.version=1.0.0,deployment.environment=production
    networks:
      - otel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { if (res.statusCode === 200) process.exit(0); else process.exit(1); }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - otel-collector
      - apm-server

volumes:
  elasticsearch_data:
  jenkins_data:

networks:
  otel-network:
    driver: bridge
    name: otel-network